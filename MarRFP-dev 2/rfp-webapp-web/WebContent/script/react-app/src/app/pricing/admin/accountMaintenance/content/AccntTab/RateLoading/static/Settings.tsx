/* eslint-disable prettier/prettier */
const Settings = {
  api: {
    getRateLoadingList: "/accountmaintedit/getContentOnlyTab2.action",
    updateRateLoadingList: "/accountmaintedit/updateTab2.action",
    lookUpRateOffer: "/accountmaintedit/lookUpRateOffer.action",
    getRateOffers: "/accountmaintedit/findRateOffers.action",
    getRatePrograms: "/accountmaintedit/findRatePrograms.action",
  },
  sappAdmin:{
    Yes:'Yes',
    No:'No'
  },
  rateLoading: {
    requiredMessage: "Invalid RateOffer",
    maxLength: 255,
    dateLength: 10,
    maxFloatDefaultPercentLimit: 100,
    toolTipMessage: "This value is required.",
    totalNumberOfRatePrograms: 5,
    totalNumberOfAerRatePrograms: 3,
    floatDefaultTooltip: "floatDefaultPercent",
    closeMessageBox: "OK - Close Message Box",
    duplicateRateProgsAlertMessage:
      "Duplicate rate programs are not allowed in the same year.  \n\n Please reach out to the PAS Rate Load Administrator for assistance.",
    duplicateRateProgsErrorMessage:
      "Duplicate rate programs are not allowed in the same year.",
    floatDefaultPercentAlertMsg1: "Please enter a value between 0 and 100",
    floatDefaultPercentAlertMsg2:
      "Invalid Float Default % values detected, please correct",
    preRequisites: {
      rpMsg1: "Room Pool Group 1-RPGM1",
      rpMsg2: "Room Pool Group 1-RPGM2",
      rpMsg3: "Room Pool Group 2-RPGM1",
      rpMsg4: "Room Pool Group 2-RPGM2",
      rpMsg5: "Room Pool Group 3-RPGM1",
      rpMsg6: "Room Pool Group 3-RPGM2",
    },
    emptyRateProgsObject: {
      rateProg: "",
      is_aer_rpgm: "",
      sequence: 3,
      subsequence: 2,
      rateOfferId: null,
      rateOfferName: "",
    },
    emptyAerRateProgsObject: {
      rateProg: "",
      is_aer_rpgm: "",
      sequence: 2,
      subsequence: 2,
      rateOfferId: null,
      rateOfferName: "",
    },
    rateProgs: [
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 1,
        subsequence: 1,
        rateOfferId: null,
        rateOfferName: "",
      },
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 1,
        subsequence: 2,
        rateOfferId: null,
        rateOfferName: "",
      },
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 2,
        subsequence: 1,
        rateOfferId: null,
        rateOfferName: "",
      },
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 2,
        subsequence: 2,
        rateOfferId: null,
        rateOfferName: "",
      },
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 3,
        subsequence: 1,
        rateOfferId: null,
        rateOfferName: "",
      },
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 3,
        subsequence: 2,
        rateOfferId: null,
        rateOfferName: "",
      },
    ],
    aerRateProgs: [
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 1,
        subsequence: 1,
        rateOfferId: null,
        rateOfferName: "",
      },
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 1,
        subsequence: 2,
        rateOfferId: null,
        rateOfferName: "",
      },
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 2,
        subsequence: 1,
        rateOfferId: null,
        rateOfferName: "",
      },
      {
        rateProg: "",
        is_aer_rpgm: "",
        sequence: 2,
        subsequence: 2,
        rateOfferId: null,
        rateOfferName: "",
      },
    ],
    yes: "Y",
    no: "N",
    yesNoList: [
      {
        shortValue: "Y",
        description: "Yes",
      },
      {
        shortValue: "N",
        description: "No",
      },
    ],
    formFields: {
      accountAllowsFloatVP: {
        id: "accountDetailBrands.accountAllowFloatVP",
        name: "Account allows Float VP:",
        key: "shortValue",
        value: "description",
      },
      floatVPProductEnabled: {
        name: "Float VP Product Enabled:",
        key: "shortValue",
        value: "description",
        id: "accountDetailBrands.allow_floatnociel",
      },
      hotelCanPriceFloatVP: {
        name: "Hotel Can Price Float VP:",
        key: "shortValue",
        value: "description",
        id: "accountDetailBrands.allowHotelcanPriceFloatVP",
      },
      hotelsCanModifyRates: {
        name: "Hotels can modify rates:",
        id: "accountDetailBrands.allow_modifications",
        key: "shortValue",
        value: "description",
      },
      outerIdForStartAndEndDate: "modification",
      title: "Enter the date in the format: mm/dd/yyyy",
      modal: {
        modalTitle: "Alert Message",
        modalMessage:
          "WARNING: By switching this flag to Yes, you will be allowing ALL hotel users to raise their rates. There will be NO rate checks of any kind.",
        modalMessageString1: "You must select ",
        modalMessageString2: " which is required for ",
        modalMessageString3: "You must enter start date for modifying rates.",
        modalMessageString4: "You must enter end date for modifying rates.",
        modalMessageString5:
          "You must enter start date for modifying questions.",
        modalMessageString6: "You must enter end date for modifying questions.",
        modalMessage2: "Rate Programs cannot be same.",
        modalXPosition: -380,
        modalYPosition: 0,
        rateModalXPosition: -200,
        rateModalYPosition: 0,
        rpgm1ModalXPosition: -100,
        rpgmModalYPosition: -50,
        rpgm2ModalXPosition: -100,
      },
      //Added to show modal on change of Hotel can modify question
      questionModal: {
        modalTitle: "Alert Message",
        modalMessage:
          "WARNING:  By switching this flag to Yes, you will be allowing ALL hotel users to change the answers to the questions.  There will be NO rate checks of any kind.",
        modalMessageString1: "You must select ",
        modalMessageString2: " which is required for ",
        modalMessageString3: "You must enter start date for modifying rates.",
        modalMessageString4: "You must enter end date for modifying rates.",
        modalMessageString5:
          "You must enter start date for modifying questions.",
        modalMessageString6: "You must enter end date for modifying questions.",
        modalMessage2: "Rate Programs cannot be same.",
        modalXPosition: -300,
        modalYPosition: 0,
        rateModalXPosition: -200,
        rateModalYPosition: 0,
        rpgm1ModalXPosition: -100,
        rpgmModalYPosition: -50,
        rpgm2ModalXPosition: -100,
      },
      startDate: {
        name: "Start Date:",
        id: "accountDetailBrands.startmoddate",
        calId: "calStartDate",
      },
      endDate: {
        name: "End Date:",
        id: "accountDetailBrands.endmoddate",
        calId: "calEndDate",
      },
      hotelsCanModifyQuestions: {
        name: "Hotels can modify questions:",
        id: "accountDetailBrands.allow_qmodifications",
        key: "shortValue",
        value: "description",
      },
      outerIdForQuesStartAndEndDate: "qmodification",
      qStartDate: {
        name: "Start Date:",
        id: "accountDetailBrands.startqmoddate",
        calId: "calQStartDateId",
      },
      qEndDate: {
        name: "End Date:",
        id: "accountDetailBrands.endqmoddate",
        calId: "calQEndDateId",
      },
      clusterCode: {
        name: "Cluster Code:",
        id: "accountDetailBrands.clustercode",
      },
      rateOfferAndRatePrograms: "Rate Offer / Rate Programs",
      rateOffers: {
        name: "Rate Offer:",
        id: "rateOfferName",
        gppId: "aerRateOfferName",
      },
      ratePrograms: {
        name: "Rate Programs:",
        rpgmId1: "rpgmId1",
        rpgmId2: "rpgmId2",
        rpgmId3: "rpgmId3",
        rpgmId4: "rpgmId4",
        rpgmId5: "rpgmId5",
        rpgmId6: "rpgmId6",
      },
      roomPoolGroup1: {
        name: "Room Pool Group 1:",
        id1: "rateProgram1",
        id2: "rateProgram2",
        gpId1: "aerRateProgram1",
        gpId2: "aerRateProgram2",
      },
      roomPoolGroup2: {
        name: "Room Pool Group 2:",
        id1: "rateProgram3",
        id2: "rateProgram4",
        gpId1: "aerRateProgram3",
        gpId2: "aerRateProgram4",
      },
      roomPoolGroup3: {
        name: "Room Pool Group 3:",
        id1: "rateProgram5",
        id2: "rateProgram6",
        gpId1: "aerRateProgram5",
        gpId2: "aerRateProgram6",
      },
      gppRateOfferAndRatePrograms: "GPP Rate Offer / Rate Programs",
      analysisReportOut: {
        name: "Analysis Report Out:",
        id: "accountDetailBrands.analysisreportout",
        key: "shortValue",
        value: "description",
      },
      internalPASNotes: {
        name: "Internal PAS Notes:",
        id: "accountDetailBrands.internalpasnotes",
        alertMsg: "You are only allowed to enter 255 characters.",
      },
      thirdPartyLogin: {
        name: "Third Party Login:",
        id: "accountDetailBrands.set_id",
      },
      thirdPartyPassword: {
        name: "Third Party Password:",
        id: "accountDetailBrands.rate_plan_id",
      },
      rateLoadInstructionsSubmittedToGDS: {
        name: "Rate Load Instructions Submitted to GDS:",
        id: "accountDetailBrands.rateLoadInstructionsGDS",
        key: "shortValue",
        value: "description",
      },
      rateLoadingNotes: {
        name: "Rate Loading Notes:",
        id: "accountDetailBrands.rateLoadingNotes",
      },

      canPriceCheckbox: {
        id: "canPriceId",
        label: "Can Price Id",
      },
      floatDefaultPercent: {
        id: "floatDefaultPercentId",
        label: "float Default %",
      },
      rpgList: [
        {
          keyField: "2",
          valField: "2",
        },
        {
          keyField: "3",
          valField: "3",
        },
      ],
      accountViewableoptions: {
        key: "keyField",
        value: "valField",
      },
    },
    rateOfferLookUpModal: {
      subHeading: "Select Rate Offer/Rate Programs",
      rateOfferKey: "rateOfferId",
      rateOfferValue: "name",
      rateProgramCode: "rateProgramCode",
      updateBtnId: "updateButton",
      removeBtnId: "removeButton",
      gppUpdateBtnId: "aerUpdateButton",
      gppRemoveBtnId: "aerRemoveButton",
      gppMaxRoomPools: 2,
      rateOfferModalTitle: "Rate Offer/Rate Program Lookup",
      searchSelect: {
        width: "200px",
        height: 20,
        range: 5,
        id: "rateOffers",
      },
      select: {
        key: "rateProgramCode",
        value: "rateProgramCode",
      },
      initialRateProgObject: {
        key: "*",
        value: "",
      },
      submitButton: {
        alternative: "Submit",
        id: "SubmitButton",
      },
      cancelButton: {
        alternative: "Cancel",
        id: "CancelButton",
      },
    },
    tableColumns: {
      id: {
        field: "rateLoading",
      },
      affiliationname: {
        field: "affiliationname",
        header: "Brand",
      },
      servicetype: {
        field: "servicetype",
        header: "Type",
      },
      canprice: {
        field: "canprice",
        header: "Can Price",
      },
      currentroompool: {
        field: "currentroompool",
        header: "#RPG's Allowed",
      },
      default_percent: {
        field: "default_percent",
        header: "Float Default %",
      },
      participateGPP: {
        field: "gpp_value",
        header: "Participate in GPP",
      },
    },
  },
};
export default Settings;
